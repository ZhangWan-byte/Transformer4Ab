{'clip_norm': 1, 'seq_clip_mode': 1, 'neg_sample_mode': 0, 'data_type': 'seq1_neg0', 'data_path': './data/data_list.pkl', 'test_data_path': '../SARS-SAbDab_Shaun/CoV-AbDab_extract.csv', 'use_cache': True, 'use_L2': False, 'use_pair': False, 'num_neg': 4, 'use_reg': 0, 'use_BSS': False, 'batch_size': 16, 'epi_len': 72, 'model_name': 'masonscnn', 'folds_path': './data/processed_data_clip1_neg0.pkl'}
training masonscnn on SAbDab-full
loading preprocessed data from ./data/processed_data_clip1_neg0.pkl
model parameters:  418817
Epoch 0
  0%|          | 0/491 [00:00<?, ?it/s]  0%|          | 1/491 [00:00<06:51,  1.19it/s]  3%|▎         | 17/491 [00:00<00:19, 24.07it/s]  7%|▋         | 34/491 [00:01<00:09, 48.53it/s] 10%|▉         | 49/491 [00:01<00:06, 67.92it/s] 13%|█▎        | 65/491 [00:01<00:04, 87.64it/s] 16%|█▋        | 81/491 [00:01<00:03, 103.73it/s] 20%|█▉        | 96/491 [00:01<00:03, 115.02it/s] 23%|██▎       | 111/491 [00:01<00:03, 121.94it/s] 26%|██▌       | 126/491 [00:01<00:02, 128.85it/s] 29%|██▊       | 141/491 [00:01<00:02, 131.84it/s] 32%|███▏      | 157/491 [00:01<00:02, 137.42it/s] 35%|███▌      | 172/491 [00:01<00:02, 140.54it/s] 38%|███▊      | 187/491 [00:02<00:02, 142.95it/s] 41%|████      | 202/491 [00:02<00:02, 143.60it/s] 44%|████▍     | 217/491 [00:02<00:01, 141.88it/s] 47%|████▋     | 233/491 [00:02<00:01, 144.82it/s] 51%|█████     | 249/491 [00:02<00:01, 148.21it/s] 54%|█████▍    | 265/491 [00:02<00:01, 149.29it/s] 57%|█████▋    | 281/491 [00:02<00:01, 145.52it/s] 60%|██████    | 297/491 [00:02<00:01, 147.08it/s] 64%|██████▎   | 313/491 [00:02<00:01, 148.66it/s] 67%|██████▋   | 328/491 [00:03<00:01, 148.13it/s] 68%|██████▊   | 333/491 [00:03<00:01, 108.32it/s]
Traceback (most recent call last):
  File "pre_train.py", line 622, in <module>
    pre_train(config=config)
  File "pre_train.py", line 390, in pre_train
    pred = config["model"](para, epi)
  File "/home/user/anaconda3/envs/graph/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1190, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/user/wanzhang/Transformer4Ab/models/masonscnn.py", line 86, in forward
    batch_antibody_ft = torch.Tensor([to_onehot(i, mode=1) for i in batch_antibody_ft]).float().cuda()
KeyboardInterrupt
